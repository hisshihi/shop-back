# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    # Запуск контейнера сервиса
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: shop_db
        # Установка проверок, что postgres правильно запущен
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6"

      - name: Install go-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateup

      # - name: Create app.env file
      #   run: |
      #     echo "DB_DRIVER=${{ secrets.DB_DRIVER }}" > app.env
      #     echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" >> app.env
      #     echo "SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }}" >> app.env

      - name: Test
        run: make test
